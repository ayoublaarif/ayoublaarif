


$bgColor: #979797;
$priColor: #44378E;
$secColor: #F5E7DC;
$trdColor: #FEDDF4;
$frdColor: #EA5830;



%montserratt{
    font-family: Montserrat;
    font-weight: 300;
    font-size: 2rem;
  }

  @mixin fontfamily($f,$s,$sub,$w) {
    font-family: $f;
    font-weight: $w;
    @include fontsize($s,$sub);
  }

  @mixin montserrat($s,$sub,$w) {
    @include fontfamily(manrope,$s,$sub,$w);
  }

  @mixin ivymode($s,$sub,$w) {
    @include fontfamily(Ivy mode,$s,$sub,$w);
  }

  //LaLuxesSerifW05-Regular

  @mixin fontsize($s,$sub) {
    font-size: $s;
    @media (max-width: 600px){
        font-size: $s - $sub;
        
    }
  }
  
  @mixin margin-class($side, $number) {
    $firstLetter: str-slice($side, 0, 1);
    .m-#{$firstLetter}-#{$number}{
       margin-#{$side}: #{$number}rem;
    }
  }
  
  $margins: (0, 20);
  $sides: ("top", "right", "bottom", "left");
  @mixin generate-margin(){
    @for $margin from 1 through 20 {
        @each $side in $sides{
          @include margin-class($side, $margin);
        }
     }

     @include generate-auto-margin();  

  }
  @mixin generate-auto-margin(){
        @each $side in $sides{
          $firstLetter: str-slice($side, 0, 1);
          .m-#{$firstLetter}-auto{
            margin-#{$side}: auto;
          }
        }
  }
  
  :root{
    @include generate-margin();  
  }


  @mixin breakpoint($point) {
    @if $point == phone {
      @media (max-width: 600px) { @content; }
    }
    @else if $point == tablet {
      @media (max-width: 1024px) { @content; }
    }
    @else if $point == desktop {
      @media (max-width: 1600px)  { @content; }
    }
  }

  @function strip-unit($value) {
    @return $value / ($value * 0 + 1);
  }
  
  @mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);
  
    @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
      & {
        font-size: $min-font-size;
        @media screen and (min-width: $min-vw) {
          font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
        }
        @media screen and (min-width: $max-vw) {
          font-size: $max-font-size;
        }
      }
    }
  }


  .bg{
    position: relative;
    width: 100vw;
    height: 100%;
    z-index: -10;
    background: $bgColor 0% 0% no-repeat;
    opacity: 1;
    filter: blur(50px);
    -webkit-filter: blur(50px) contrast(0%) opacity(12%);
    }

    .bg-t{
      position: fixed;
      bottom: 0;
      width: 100vw;
      height: 0%;
      z-index: 800;
      
      background-color: #000;
      opacity: 1;
      }